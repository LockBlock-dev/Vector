#pragma once

enum RV32_OPCODE
{
    RV32_LUI = 0b0110111,
    RV32_AUIPC = 0b0010111,
    RV32_JAL = 0b1101111,
    RV32_JALR = 0b1100111,
    RV32_BRANCH = 0b1100011,
    RV32_LOAD = 0b0000011,
    RV32_STORE = 0b0100011,
    RV32_OP_IMM = 0b0010011,
    RV32_OP = 0b0110011,
    RV32_MISC_MEM = 0b0001111,
    RV32_SYSTEM = 0b1110011,
};

enum RV32_FUNCT3
{
    /**
     * RV32_BRANCH
     */

    RV32I_FUNCT3_BEQ = 0b000,
    RV32I_FUNCT3_BNE = 0b001,
    RV32I_FUNCT3_BLT = 0b100,
    RV32I_FUNCT3_BGE = 0b101,
    RV32I_FUNCT3_BLTU = 0b110,
    RV32I_FUNCT3_BGEU = 0b111,

    /**
     * RV32_LOAD
     */

    RV32I_FUNCT3_LB = 0b000,
    RV32I_FUNCT3_LH = 0b001,
    RV32I_FUNCT3_LW = 0b010,
    RV32I_FUNCT3_LBU = 0b100,
    RV32I_FUNCT3_LHU = 0b101,

    /**
     * RV32_STORE
     */

    RV32I_FUNCT3_SB = 0b000,
    RV32I_FUNCT3_SH = 0b001,
    RV32I_FUNCT3_SW = 0b010,

    /**
     * RV32_OP_IMM
     */

    RV32I_FUNCT3_ADDI = 0b000,
    RV32I_FUNCT3_SLTI = 0b010,
    RV32I_FUNCT3_SLTIU = 0b011,
    RV32I_FUNCT3_XORI = 0b100,
    RV32I_FUNCT3_ORI = 0b110,
    RV32I_FUNCT3_ANDI = 0b111,
    RV32I_FUNCT3_SLLI = 0b001,
    RV32I_FUNCT3_SRLI_SRAI = 0b101,

    /**
     * RV32_OP
     */

    RV32I_FUNCT3_ADD = 0b000,
    RV32I_FUNCT3_SUB = 0b000,
    RV32I_FUNCT3_SLL = 0b001,
    RV32I_FUNCT3_SLT = 0b010,
    RV32I_FUNCT3_SLTU = 0b011,
    RV32I_FUNCT3_XOR = 0b100,
    RV32I_FUNCT3_SRL = 0b101,
    RV32I_FUNCT3_SRA = 0b101,
    RV32I_FUNCT3_OR = 0b110,
    RV32I_FUNCT3_AND = 0b111,

    RV32M_FUNCT3_MUL = 0b000,
    RV32M_FUNCT3_MULH = 0b001,
    RV32M_FUNCT3_MULHSU = 0b010,
    RV32M_FUNCT3_MULHU = 0b011,
    RV32M_FUNCT3_DIV = 0b100,
    RV32M_FUNCT3_DIVU = 0b101,
    RV32M_FUNCT3_REM = 0b110,
    RV32M_FUNCT3_REMU = 0b111,

    /**
     * RV32_SYSTEM
     */

    RV32I_FUNCT3_PRIV = 0b000,
    RV32Zicsr_FUNCT3_CSRRW = 0b001,
    RV32Zicsr_FUNCT3_CSRRS = 0b010,
    RV32Zicsr_FUNCT3_CSRRC = 0b100,
    RV32Zicsr_FUNCT3_CSRRWI = 0b101,
    RV32Zicsr_FUNCT3_CSRRSI = 0b110,
    RV32Zicsr_FUNCT3_CSRRCI = 0b111,
};

enum RV32_FUNCT7
{
    /**
     * RV32_OP_IMM
     */

    RV32I_FUNCT7_SLLI = 0b0000000,
    RV32I_FUNCT7_SRLI = 0b0000000,
    RV32I_FUNCT7_SRAI = 0b0100000,

    /**
     * RV32_OP
     */

    RV32I_FUNCT7_ADD = 0b0000000,
    RV32I_FUNCT7_SUB = 0b0100000,
    RV32I_FUNCT7_SLL = 0b0000000,
    RV32I_FUNCT7_SLT = 0b0000000,
    RV32I_FUNCT7_SLTU = 0b0000000,
    RV32I_FUNCT7_XOR = 0b0000000,
    RV32I_FUNCT7_SRL = 0b0000000,
    RV32I_FUNCT7_SRA = 0b0100000,
    RV32I_FUNCT7_OR = 0b0000000,
    RV32I_FUNCT7_AND = 0b0000000,

    RV32I_FUNCT7 = 0b0000000,
    RV32I_FUNCT7_ALT = 0b0100000,
    RV32M_FUNCT7 = 0b0000001,
};

enum RV32I_FUNCT12
{
    /**
     * RV32_SYSTEM
     */

    RV32I_FUNCT12_ECALL = 0b000000000000,
    RV32I_FUNCT12_EBREAK = 0b000000000001,
};

enum RV32I_FENCE
{
    /**
     * RV32_MISC_MEM
     */

    RV32I_FENCE_NORMAL = 0b0000,
    RV32I_FENCE_TSO = 0b1000,
};
